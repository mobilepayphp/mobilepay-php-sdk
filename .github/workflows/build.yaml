on:
  pull_request:
  push:

env:
  MOBILEPAY_API_KEY: ${{ secrets.MOBILEPAY_API_KEY }}
  MOBILEPAY_PAYMENTPOINT_ID: ${{ secrets.MOBILEPAY_PAYMENTPOINT_ID }}
  MOBILEPAY_PAYMENT_SOURCE_ID: ${{ secrets.MOBILEPAY_PAYMENT_SOURCE_ID }}
  MOBILEPAY_USER_ID: ${{ secrets.MOBILEPAY_USER_ID }}

name: "Build pipeline"

jobs:
  coding-standards:
    name: "Coding standards"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none

      - name: "Install dependencies"
        run: composer install --no-interaction --no-progress --optimize-autoloader

      - name: "Check coding style"
        run: make cs-check

  static-code-analysis:
    name: "Static code analysis"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none

      - name: "Install dependencies"
        run: composer install --no-interaction --no-progress --optimize-autoloader

      - name: "Run static analysis"
        run: make analyse

  tests:
    name: "Tests on PHP ${{ matrix.php-version }} ${{ matrix.prefer-lowest }}"

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: [ '8.1', '8.2' ]
        prefer-lowest: ['', '--prefer-lowest --prefer-stable']
        coverage-driver: [ 'xdebug' ]

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: "Install dependencies"
        run: composer update ${{ matrix.prefer-lowest }} --no-interaction --no-progress --optimize-autoloader

      - name: "Run tests"
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
